% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tseries-stationarity.R
\name{kpss_test}
\alias{kpss_test}
\alias{kpss_test.lm}
\alias{kpss_test._lm}
\alias{kpss_test_vec}
\title{Run a Kwiatkowski-Phillips-Schmidt-Shin (KPSS) Test}
\usage{
kpss_test(object, null = "Level", ..., .alpha = 0.05)

\method{kpss_test}{lm}(object, null = "Level", ..., .alpha = 0.05)

\method{kpss_test}{`_lm`}(object, null = "Level", ..., .alpha = 0.05)

kpss_test_vec(x, null = "Level", ..., .alpha = 0.05)
}
\arguments{
\item{object}{A model object (such as a fitted \code{\link[stats:lm]{lm}} object).}

\item{null}{(Optional) The null hypothesis, either "Level" (default) or
"Trend".}

\item{...}{Further arguments passed to \code{\link[tseries:kpss.test]{tseries::kpss.test()}}.}

\item{.alpha}{(Optional) Critical p-value used to determine test conclusion.
The default is 0.05 (5\%).}

\item{x}{For \verb{_vec()} functions, a numeric vector.}
}
\value{
A \link[tibble:tibble-package]{tibble} with columns \code{test}, \code{statistic},
\code{p_value}, \code{result}, \code{outcome}, and \code{.notes} with extra information.
}
\description{
The hypotheses for this test are:

A wrapper around \code{\link[tseries:kpss.test]{tseries::kpss.test()}} that standardizes the inputs and outputs.
}
\details{
\itemize{
\item Null: Series is either Level or Trend stationary (user defined)
\item Alternative: Series has a unit root
}
}
\examples{
library(tidytest)

#> `lm` Method
mod_lm_fit <- lm(mpg ~ disp + wt + hp, data = mtcars)

kpss_test(mod_lm_fit)
kpss_test(mod_lm_fit, null = "Trend")


#> `linear_reg` Method
library(parsnip)

mod_linreg_fit <- linear_reg() \%>\%
  set_engine("lm") \%>\%
  fit(mpg ~ disp + wt + hp, data = mtcars)

kpss_test(mod_linreg_fit)
kpss_test(mod_linreg_fit, null = "Trend")


#> Numeric Method
set.seed(1914)
resids <- rnorm(100)

kpss_test_vec(resids)
kpss_test_vec(resids, null = "Trend")

}
\seealso{
Other stationarity tests: 
\code{\link{aug_dickey_fuller_test}()},
\code{\link{phillips_perron_test}()}
}
\concept{stationarity tests}
